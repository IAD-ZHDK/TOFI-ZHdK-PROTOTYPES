{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/js/Ble.js"],"names":["__webpack_require__","containerElement","document","getElementById","P5","p","myFont","myBLE","chanelNames","histogram","Array","i","length","dat","require","gui","GUI","guiObject","factor","preload","loadFont","setup","createCanvas","windowWidth","windowHeight","Ble","textFont","textSize","width","fill","noStroke","textAlign","CENTER","window","chrome","webstore","runtime","alert","filter","addFolder","add","open","draw","clear","isConnected","sensorValues","push","spacing","translate","radius","map","unshift","stroke","noFill","beginShape","j","vertex","endShape","ellipse","text","pop","setFilter","touchStarted","connectAndStartNotify","windowResized","resizeCanvas","that","_classCallCheck3","default","this","console","log","serviceUuid","P5ble","filtering","connect","gotCharacteristics","error","characteristics","onDisconnected","sensorCharacteristic","startNotifications","handleSensor","data","Math","floor","getUint16"],"mappings":"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","file":"static/js/0.acca0dc6927940c25ab9.js","sourcesContent":["import './css/style.css'\nimport P5 from 'p5'\nimport Ble from './js/Ble'\n// import * as dat from 'dat.gui'\n// todo: webpack is building with html file paths defaulting to root. This should be local to make it easer to host demos with github pages\nconst containerElement = document.getElementById('p5-container')\n\nconst sketch = (p) => {\n  let x = 100\n  let y = 100\n  let myFont\n  let myBLE\n  let chanelNames = ['Battery', 'Reference', 'Ch 6', 'Ch 5', 'Ch 4', 'Ch 3', 'Ch 2', 'Ch 1']\n  let histogram = new Array(8)\n  // Loop to create 2D array\n  for (let i = 0; i < histogram.length; i++) {\n    histogram[i] = new Array(1)\n  }\n\n  const serviceUuid = 'ff9c1e42-7b32-11ea-bc55-0242ac130003'\n  let sensorCharacteristic\n  let isConnected = false\n\n  // settings gui\n  const dat = require('dat.gui')\n  p.gui = new dat.GUI()\n  p.guiObject = {\n    factor: 0.5\n  }\n  // this.gui.remember(object1)\n\n  p.preload = function () {\n    myFont = p.loadFont('static/fonts/inconsolata.otf')\n  }\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight)\n    myBLE = new Ble()\n    p.textFont(myFont)\n    p.textSize(p.width / 100)\n    p.fill(255)\n    p.noStroke()\n    p.textAlign(p.CENTER, p.CENTER)\n    let isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime)\n    if (!isChrome) {\n      window.alert('BLE may not work in your browser. Use Chrome or check for a list of compatible browsers here: https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API')\n    }\n    // setup settings gui\n    let filter = p.gui.addFolder('filter (weighted moving average)')\n    filter.add(p.guiObject, 'factor', 0.0, 0.99) //  (weighted moving average)\n    filter.open()\n    // histogram\n  }\n\n  p.draw = function () {\n    p.clear()\n    if (myBLE.isConnected) {\n      let sensorValues = []\n      for (let i = 0; i < myBLE.sensorValues.length - 1; i++) {\n        sensorValues.push(myBLE.sensorValues[i + 1])\n      }\n      let spacing = p.windowWidth / myBLE.sensorValues.length\n      p.translate((spacing / 2), p.windowHeight / 2)\n      for (let i = 0; i < myBLE.sensorValues.length; i++) {\n        p.push()\n        p.translate(spacing * i, 0)\n        let radius = p.map(myBLE.sensorValues[i], 0, 16384, 10, spacing * 0.3)\n        histogram[i].unshift(radius / 2)\n        p.stroke(100)\n        p.noFill()\n\n        p.beginShape()\n        for (let j = 0; j < histogram[i].length - 1; j++) {\n          p.vertex(histogram[i][j], -j)\n        }\n        p.endShape()\n        p.beginShape()\n        for (let j = 0; j < histogram[i].length - 1; j++) {\n          p.vertex(-histogram[i][j], -j)\n        }\n        p.endShape()\n        p.fill(255)\n        p.ellipse(0, 0, radius, radius)\n        p.noStroke()\n        p.translate(0, spacing / 3 * 4.0)\n        p.text(myBLE.sensorValues[i], 0, 0)\n        p.translate(0, p.textSize())\n        p.text(chanelNames[i], 0, 0)\n        p.pop()\n        myBLE.setFilter(p.guiObject.factor)\n      }\n    } else {\n      p.translate(p.windowWidth / 2, p.windowHeight / 2)\n      p.text('No BLE Connection, click anywhere to pair BLE device', 0, 0)\n    }\n  }\n\n  p.touchStarted = function () {\n    if (!myBLE.isConnected) {\n      myBLE.connectAndStartNotify()\n    }\n  }\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight)\n  }\n}\n\nlet PFIVE = new P5(sketch, containerElement)\n","import P5 from 'p5'\nimport P5ble from 'p5ble'\nlet that\n\nclass Ble {\n  constructor () {\n    console.log('looking for: A22A0001-AD0B-4DF2-A4E2-1745CBB4dCEE')\n    this.serviceUuid = 'A22A0001-AD0B-4DF2-A4E2-1745CBB4dCEE'\n    this.myBLE = new P5ble()\n    this.isConnected = false\n    this.sensorValues = []\n    this.sensorValues[0] = 0\n    this.sensorValues[1] = 0\n    this.sensorValues[2] = 0\n    this.sensorValues[3] = 0\n    this.sensorValues[4] = 0\n    this.sensorValues[5] = 0\n    this.sensorValues[6] = 0\n    this.sensorValues[7] = 0\n    this.filtering = true\n    this.factor = 0.5\n    that = this\n  }\n\n  connectAndStartNotify () {\n    // Connect to a device by passing the service UUID\n    this.myBLE.connect(this.serviceUuid, this.gotCharacteristics)\n  }\n  gotCharacteristics (error, characteristics) {\n    // A function that will be called once got characteristics\n    if (error) {\n      console.log('error: ', error)\n    } else {\n      console.log(characteristics[0])\n      // Check if myBLE is connected\n      console.log('check connection.')\n      that.isConnected = that.myBLE.isConnected()\n\n      // Add a event handler when the device is disconnected\n      that.myBLE.onDisconnected(that.onDisconnected)\n\n      for (let i = 0; i < characteristics.length; i++) {\n        if (i === 0) {\n          const sensorCharacteristic = characteristics[i]\n          // Set datatype to 'custom', p5.ble.js won't parse the data, will return data as it is.\n          that.myBLE.startNotifications(sensorCharacteristic, that.handleSensor, 'custom')\n          console.log('characteristics: 1')\n        } else if (i === 1) {\n          console.log('characteristics: 2')\n        } else if (i === 2) {\n          console.log('characteristics: 3')\n        } else {\n          console.log(\"characteristic doesn't match.\")\n        }\n      }\n    }\n  }\n\n  onDisconnected () {\n    console.log('Device was disconnected.')\n    this.isConnected = false\n  }\n\n  setFilter (filter) {\n    this.factor = filter\n    if (this.factor <= 0.01) {\n      this.filtering = false\n    } else {\n      this.filtering = true\n    }\n  }\n\n  handleSensor (data) {\n    if (that.filtering) {\n      let factor = that.factor\n      that.sensorValues[0] = Math.floor(that.sensorValues[0] * factor)\n      that.sensorValues[1] = Math.floor(that.sensorValues[1] * factor)\n      that.sensorValues[2] = Math.floor(that.sensorValues[2] * factor)\n      that.sensorValues[3] = Math.floor(that.sensorValues[3] * factor)\n      that.sensorValues[4] = Math.floor(that.sensorValues[4] * factor)\n      that.sensorValues[5] = Math.floor(that.sensorValues[5] * factor)\n      that.sensorValues[6] = Math.floor(that.sensorValues[6] * factor)\n      that.sensorValues[7] = Math.floor(that.sensorValues[7] * factor)\n      that.sensorValues[0] += Math.floor(data.getUint16(0, true) * (1.0 - factor))\n      that.sensorValues[1] += Math.floor(data.getUint16(2, true) * (1.0 - factor))\n      that.sensorValues[2] += Math.floor(data.getUint16(4, true) * (1.0 - factor))\n      that.sensorValues[3] += Math.floor(data.getUint16(6, true) * (1.0 - factor))\n      that.sensorValues[4] += Math.floor(data.getUint16(8, true) * (1.0 - factor))\n      that.sensorValues[5] += Math.floor(data.getUint16(10, true) * (1.0 - factor))\n      that.sensorValues[6] += Math.floor(data.getUint16(12, true) * (1.0 - factor))\n      that.sensorValues[7] += Math.floor(data.getUint16(14, true) * (1.0 - factor))\n    } else {\n      that.sensorValues[0] = data.getUint16(0, true)\n      that.sensorValues[1] = data.getUint16(2, true)\n      that.sensorValues[2] = data.getUint16(4, true)\n      that.sensorValues[3] = data.getUint16(6, true)\n      that.sensorValues[4] = data.getUint16(8, true)\n      that.sensorValues[5] = data.getUint16(10, true)\n      that.sensorValues[6] = data.getUint16(12, true)\n      that.sensorValues[7] = data.getUint16(14, true)\n    }\n  }\n}\nexport default Ble\n"],"sourceRoot":""}