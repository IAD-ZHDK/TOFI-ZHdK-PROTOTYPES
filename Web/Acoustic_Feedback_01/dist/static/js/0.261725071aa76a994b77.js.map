{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/js/Note.js","webpack:///./src/js/Ble.js"],"names":["__webpack_require__","i","containerElement","document","getElementById","P5","p","myBLE","Notes","SimonSequencePlaying","SimonSequence","SimonSequenceIndex","usedChannelNames","midiNotes","colorPallet","visualWidth","windowWidth","demoMode","state","dat","require","newSimonSequence","push","floor","random","playSequence","release","trigger","setTimeout","checkSequence","length","console","log","sequenceWon","sequenceLost","setupSoundObjects","initialOffsetX","diameter","spacing","Note","windowHeight","gui","GUI","guiObject","factor","threshold","preload","loadFont","setup","createCanvas","colorMode","HSB","blendMode","SCREEN","Ble","textSize","width","fill","noStroke","textAlign","CENTER","filter","addFolder","add","open","chanelNames","draw","clear","background","setFilter","sensorValues","checkMouseOver","text","x","height","translate","isConnected","touchStarted","connectAndStartNotify","mouseY","windowResized","resizeCanvas","keyPressed","P","y","color","_classCallCheck3","default","this","NoteFlag","envelope","Envelope","setADSR","setRange","oscillator","Oscillator","HSBColor","amp","freq","midiToFreq","start","offset","angle","millis","PI","sin","radians","ellipse","dist","mouseX","play","that","window","chrome","webstore","runtime","alert","serviceUuid","P5ble","filtering","connect","gotCharacteristics","error","characteristics","onDisconnected","sensorCharacteristic","startNotifications","handleSensor","data","Math","getUint16","t"],"mappings":"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","file":"static/js/0.261725071aa76a994b77.js","sourcesContent":["import './css/style.css'\nimport P5 from 'p5'\nimport 'p5/lib/addons/p5.sound'\nimport Ble from './js/Ble'\nimport Note from './js/Note'\n// import * as dat from 'dat.gui'\n// inspiration: https://dotpiano.com/\n// inspiration: https://compform.net/js_lab/js_lab.html?/music/sketches/hello_env.js\n// todo: webpack is building with html file paths defaulting to root. This should be local to make it easer to host demos with github pages\nconst containerElement = document.getElementById('p5-container')\n\nconst sketch = (p) => {\n  let x = 100\n  let y = 100\n  let myFont\n  let myBLE\n  let Notes = []\n  let interval = 700\n  let SimonSequencePlaying = false\n  let SimonSequence = []\n  let PlayerSequence = []\n  let SimonSequenceLength = 4\n  let SimonSequenceIndex = 0\n  let usedChannelNames = []\n  let midiNotes = [60, 62, 64, 67, 69, 72, 74] // C D E G A C\n  let colorPallet = [190.43, 166.42, 50.09, 30.9, 23.4]\n  let noSensors = 5\n  let visualWidth = p.windowWidth * 0.7\n  let isConnected = false\n  let demoMode = false\n  // states\n  let ConnectBLE = 0\n  let GamePlayer = 1\n  let GameSimon = 2\n  let state = ConnectBLE\n  // settings gui\n  const dat = require('dat.gui')\n  p.gui = new dat.GUI()\n  p.guiObject = {\n    factor: 0.5,\n    threshold: 22000\n  }\n\n  p.preload = function () {\n    myFont = p.loadFont('static/fonts/inconsolata.otf')\n  }\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight)\n    p.colorMode(p.HSB)\n    p.blendMode(p.SCREEN)\n    myBLE = new Ble()\n    // p.textFont(myFont)\n    p.textSize(p.width / 100)\n    p.fill(255)\n    p.noStroke()\n    p.textAlign(p.CENTER, p.CENTER)\n    // setup settings gui\n    let filter = p.gui.addFolder('filter (weighted moving average)')\n    filter.add(p.guiObject, 'factor', 0.0, 0.99) //  (weighted moving average)\n    filter.add(p.guiObject, 'threshold', 0, 50000) //\n    filter.open()\n    for (let i = 2; i < 8; i++) {\n      usedChannelNames.push(myBLE.chanelNames[i + 1])\n    }\n  }\n\n  p.draw = function () {\n    p.clear()\n    p.background(0, 20, 10)\n    if (state === GamePlayer) {\n      drawGamePlayer()\n    } else if (state === GameSimon) {\n      p.background(0, 50, 10)\n      drawGameSimon()\n    } else if (state === ConnectBLE) {\n      BLEMesage()\n    }\n  }\n  p.touchStarted = function () {\n    if (state === ConnectBLE) {\n      setupSoundObjects()\n      myBLE.connectAndStartNotify()\n      state = GamePlayer\n    } else {\n      if (p.mouseY > p.height / 2) {\n        if (state === GamePlayer) {\n          state = GameSimon\n        }\n      }\n    }\n  }\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight)\n  }\n\n  p.keyPressed = function () {\n    setupSoundObjects()\n    demoMode = true\n    state = GamePlayer\n  }\n\n  function newSimonSequence () {\n    SimonSequence = []\n    for (let i = 0; i < SimonSequenceLength; i++) {\n      SimonSequence.push(p.floor(p.random(noSensors)))\n    }\n  }\n\n  function drawGameSimon () {\n    if (SimonSequence.length === 0) {\n      newSimonSequence()\n    }\n    if (SimonSequencePlaying === false) {\n      SimonSequencePlaying = true\n      setTimeout(playSequence, interval)\n    }\n    for (let i = 0; i < noSensors; i++) {\n      Notes[i].draw()\n    }\n  }\n\n  function playSequence () {\n    if (SimonSequenceIndex < SimonSequenceLength) {\n      releaseAllNotes()\n      Notes[SimonSequence[SimonSequenceIndex]].trigger()\n      setTimeout(playSequence, interval)\n      SimonSequenceIndex++\n    } else {\n      SimonSequencePlaying = false\n      SimonSequenceIndex = 0\n      state = GamePlayer\n    }\n  }\n\n  function drawGamePlayer () {\n    myBLE.setFilter(p.guiObject.factor)\n    let sensorValues = []\n    // get set of sensor values in use, discard\n    for (let i = 2; i < myBLE.sensorValues.length - 1; i++) {\n      sensorValues.push(myBLE.sensorValues[i + 1])\n    }\n    for (let i = 0; i < noSensors; i++) {\n      Notes[i].draw()\n      // let radius = p.map(sensorValues[i], 0, 16384, 10, spacing * 0.3)\n      if (demoMode === false) {\n        if (sensorValues[i] >= p.guiObject.threshold) {\n          if (Notes[i].trigger()) {\n            checkSequence(i)\n          }\n        } else if (sensorValues[i] < p.guiObject.threshold) {\n          Notes[i].release()\n        }\n      } else {\n        if (Notes[i].checkMouseOver()) {\n          if (Notes[i].trigger()) {\n            checkSequence(i)\n          }\n        } else {\n          Notes[i].release()\n        }\n      }\n\n      p.text(sensorValues[i], Notes[i].x, p.height - 50)\n      p.text(usedChannelNames[i], Notes[i].x, p.height - 30)\n    }\n  }\n  function checkSequence (i) {\n    if (SimonSequence.length > 0) {\n      if (i === SimonSequence[SimonSequenceIndex]) {\n        console.log('correct_' + SimonSequenceIndex + ' of' + SimonSequence.length)\n        SimonSequenceIndex++\n        if (SimonSequenceIndex >= SimonSequenceLength) {\n          // sequence won\n          setTimeout(sequenceWon, 500)\n        }\n      } else {\n        // repeat\n        setTimeout(sequenceLost, 1000)\n      }\n    }\n  }\n  function releaseAllNotes () {\n    for (let i = 0; i < noSensors; i++) {\n      Notes[i].release()\n    }\n  }\n\n  function sequenceWon () {\n    console.log('sequence won')\n    SimonSequenceIndex = 0\n    newSimonSequence()\n    state = GameSimon\n  }\n  function sequenceLost () {\n    SimonSequenceIndex = 0\n    console.log('repeat:' + SimonSequence)\n    state = GameSimon\n  }\n  function BLEMesage () {\n    p.translate(p.windowWidth / 2, p.windowHeight / 2)\n    p.text('No BLE Connection, click anywhere to pair BLE device', 0, 0)\n    if (myBLE.isConnected) {\n      state = GamePlayer\n    }\n  }\n\n  function setupSoundObjects () {\n    // sound\n    let initialOffsetX = (p.windowWidth - visualWidth) / 2\n    let diameter = visualWidth / (noSensors / 2) // slightly overlaping\n    let spacing = visualWidth / noSensors\n    initialOffsetX += spacing / 2\n    for (let i = 0; i < noSensors; i++) {\n      Notes[i] = new Note(p, midiNotes[i], (spacing * i) + initialOffsetX, p.windowHeight / 2, diameter, colorPallet[i])\n    }\n  }\n}\n\nlet PFIVE = new P5(sketch, containerElement)\n","import P5 from 'p5'\nimport 'p5/lib/addons/p5.sound'\nlet that\n\nclass Note {\n  constructor (P, midiNotes, x, y, diameter, color) {\n    this.p = P\n    this.midiNotes = midiNotes\n    this.NoteFlag = false // playing or note\n    this.envelope = new P5.Envelope()\n    this.envelope.setADSR(0.2, 0.35, 0.04, 3) // quick decay\n    this.envelope.setRange(0.6, 0.0)\n    this.oscillator = new P5.Oscillator('sine')\n    this.HSBColor = color\n    this.oscillator.amp(this.envelope) // set amplitude\n    this.freq = this.p.midiToFreq(this.midiNotes)\n    this.oscillator.freq(this.freq)// set frequency\n    this.oscillator.start() // start oscillating\n    this.diameter = diameter\n    this.amp = 0 // simulate amplitude\n    this.x = x\n    this.y = y\n    that = this\n  }\n\n  draw () {\n    let offset = 0\n    if (this.amp > 5) {\n      this.amp *= 0.99\n      let angle = this.p.millis() * (this.freq / 1000) * (this.p.PI * 2)\n      offset = this.p.sin(this.p.radians(angle)) * this.amp\n    } else {\n      this.amp = 5\n    }\n    /*\n     if (this.NoteFlag) {\n        this.p.fill(this.HSBColor, 255, this.amp)\n      } else {\n        this.p.fill(this.HSBColor, 255, 5)\n      }\n    */\n    this.p.fill(this.HSBColor, 255, this.amp)\n    this.p.noStroke()\n    this.p.ellipse(this.x, this.y + offset, this.diameter, this.diameter)\n  }\n\n  checkMouseOver () {\n    // mouse check\n    let dist = this.p.dist(this.x, this.p.height / 2, this.p.mouseX, this.p.mouseY)\n    if (dist <= this.diameter / 4) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  trigger () {\n    if (this.NoteFlag === false) {\n      this.NoteFlag = true\n      // this.envelope.triggerAttack()\n      this.envelope.play()\n      this.amp = 100\n      return true\n    }\n  }\n\n  release () {\n    if (this.NoteFlag === true) {\n      this.NoteFlag = false\n      // this.envelope.triggerRelease()\n    }\n  }\n}\nexport default Note\n","import P5 from 'p5'\nimport P5ble from 'p5ble'\nlet that\n\nclass Ble {\n  constructor () {\n    let isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime)\n    if (!isChrome) {\n      window.alert('BLE may not work in your browser. Use Chrome or check for a list of compatible browsers here: https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API')\n    }\n    console.log('looking for: A22A0001-AD0B-4DF2-A4E2-1745CBB4dCEE')\n    this.serviceUuid = 'A22A0001-AD0B-4DF2-A4E2-1745CBB4dCEE'\n    this.myBLE = new P5ble()\n    this.isConnected = false\n    this.sensorValues = []\n    this.sensorValues[0] = 0\n    this.sensorValues[1] = 0\n    this.sensorValues[2] = 0\n    this.sensorValues[3] = 0\n    this.sensorValues[4] = 0\n    this.sensorValues[5] = 0\n    this.sensorValues[6] = 0\n    this.sensorValues[7] = 0\n    this.chanelNames = ['Battery', 'Reference', 'Ch 6', 'Ch 5', 'Ch 4', 'Ch 3', 'Ch 2', 'Ch 1']\n    this.filtering = true\n    this.factor = 0.5\n    that = this\n  }\n\n  connectAndStartNotify () {\n    // Connect to a device by passing the service UUID\n    this.myBLE.connect(this.serviceUuid, this.gotCharacteristics)\n  }\n  gotCharacteristics (error, characteristics) {\n    // A function that will be called once got characteristics\n    if (error) {\n      console.log('error: ', error)\n    } else {\n      console.log(characteristics[0])\n      // Check if myBLE is connected\n      console.log('check connection.')\n      that.isConnected = that.myBLE.isConnected()\n\n      // Add a event handler when the device is disconnected\n      that.myBLE.onDisconnected(that.onDisconnected)\n\n      for (let i = 0; i < characteristics.length; i++) {\n        if (i === 0) {\n          const sensorCharacteristic = characteristics[i]\n          // Set datatype to 'custom', p5.ble.js won't parse the data, will return data as it is.\n          that.myBLE.startNotifications(sensorCharacteristic, that.handleSensor, 'custom')\n          console.log('characteristics: 1')\n        } else if (i === 1) {\n          console.log('characteristics: 2')\n        } else if (i === 2) {\n          console.log('characteristics: 3')\n        } else {\n          console.log(\"characteristic doesn't match.\")\n        }\n      }\n    }\n  }\n\n  onDisconnected () {\n    console.log('Device was disconnected.')\n    this.isConnected = false\n  }\n\n  setFilter (filter) {\n    this.factor = filter\n    if (this.factor <= 0.01) {\n      this.filtering = false\n    } else {\n      this.filtering = true\n    }\n  }\n\n  handleSensor (data) {\n    if (that.filtering) {\n      let factor = that.factor\n      that.sensorValues[0] = Math.floor(that.sensorValues[0] * factor)\n      that.sensorValues[1] = Math.floor(that.sensorValues[1] * factor)\n      that.sensorValues[2] = Math.floor(that.sensorValues[2] * factor)\n      that.sensorValues[3] = Math.floor(that.sensorValues[3] * factor)\n      that.sensorValues[4] = Math.floor(that.sensorValues[4] * factor)\n      that.sensorValues[5] = Math.floor(that.sensorValues[5] * factor)\n      that.sensorValues[6] = Math.floor(that.sensorValues[6] * factor)\n      that.sensorValues[7] = Math.floor(that.sensorValues[7] * factor)\n      that.sensorValues[0] += Math.floor(data.getUint16(0, true) * (1.0 - factor))\n      that.sensorValues[1] += Math.floor(data.getUint16(2, true) * (1.0 - factor))\n      that.sensorValues[2] += Math.floor(data.getUint16(4, true) * (1.0 - factor))\n      that.sensorValues[3] += Math.floor(data.getUint16(6, true) * (1.0 - factor))\n      that.sensorValues[4] += Math.floor(data.getUint16(8, true) * (1.0 - factor))\n      that.sensorValues[5] += Math.floor(data.getUint16(10, true) * (1.0 - factor))\n      that.sensorValues[6] += Math.floor(data.getUint16(12, true) * (1.0 - factor))\n      that.sensorValues[7] += Math.floor(data.getUint16(14, true) * (1.0 - factor))\n    } else {\n      that.sensorValues[0] = data.getUint16(0, true)\n      that.sensorValues[1] = data.getUint16(2, true)\n      that.sensorValues[2] = data.getUint16(4, true)\n      that.sensorValues[3] = data.getUint16(6, true)\n      that.sensorValues[4] = data.getUint16(8, true)\n      that.sensorValues[5] = data.getUint16(10, true)\n      that.sensorValues[6] = data.getUint16(12, true)\n      that.sensorValues[7] = data.getUint16(14, true)\n    }\n  }\n}\nexport default Ble\n"],"sourceRoot":""}