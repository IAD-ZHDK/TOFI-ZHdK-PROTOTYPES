{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/js/Ble.js"],"names":["__webpack_require__","containerElement","document","getElementById","P5","p","myFont","myBLE","preload","loadFont","setup","createCanvas","windowWidth","windowHeight","Ble","textFont","textSize","width","fill","noStroke","textAlign","CENTER","window","chrome","webstore","runtime","alert","draw","clear","isConnected","spacing","sensorValues","length","translate","i","push","radius","map","ellipse","text","pop","touchStarted","connectAndStartNotify","windowResized","resizeCanvas","that","_classCallCheck3","default","this","console","log","serviceUuid","P5ble","connect","gotCharacteristics","error","characteristics","onDisconnected","sensorCharacteristic","startNotifications","handleSensor","data","Math","floor","getUint16"],"mappings":"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","file":"static/js/0.c383dbe984d778ab8c09.js","sourcesContent":["import './css/style.css'\nimport P5 from 'p5'\nimport Ble from './js/Ble'\n// todo: webpack is building with html file paths defaulting to root. This should be local to make it easer to host demos with github pages\nconst containerElement = document.getElementById('p5-container')\n\nconst sketch = (p) => {\n  let x = 100\n  let y = 100\n  let myFont\n  let myBLE\n  const serviceUuid = 'ff9c1e42-7b32-11ea-bc55-0242ac130003'\n  let sensorCharacteristic\n  let isConnected = false\n  p.preload = function () {\n    myFont = p.loadFont('static/fonts/inconsolata.otf')\n  }\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight)\n    myBLE = new Ble()\n    p.textFont(myFont)\n    p.textSize(p.width / 60)\n    p.fill(255)\n    p.noStroke()\n    p.textAlign(p.CENTER, p.CENTER)\n    let isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime)\n    if (!isChrome) {\n      window.alert('BLE may not work in your browser. Use Chrome or check for a list of compatible browsers here: https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API')\n    }\n  }\n\n  p.draw = function () {\n    p.clear()\n    if (myBLE.isConnected) {\n      // p.normalMaterial()\n      let spacing = p.windowWidth / myBLE.sensorValues.length\n      p.translate((spacing / 2), p.windowHeight / 2)\n      // let noSensors = myBLE.sensorValues.length\n      // let noSensors = myBLE.sensorValues.length;\n      for (let i = 0; i < myBLE.sensorValues.length; i++) {\n        // for (let i = myBLE.sensorValues.length; i > myBLE.sensorValues.length - 2; i--) {\n        p.push()\n        p.translate(spacing * i, 0)\n        let radius = p.map(myBLE.sensorValues[i], 0, 16384, 10, spacing * 0.8)\n        p.ellipse(0, 0, radius, radius)\n        p.text(myBLE.sensorValues[i], 0, spacing / 3 * 2.70)\n        p.pop()\n      }\n    } else {\n      p.translate(p.windowWidth / 2, p.windowHeight / 2)\n      p.text('No BLE Connection, click anywhere to pair BLE device', 0, 0)\n    }\n  }\n\n  p.touchStarted = function () {\n    myBLE.connectAndStartNotify()\n  }\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight)\n  }\n}\n\nlet PFIVE = new P5(sketch, containerElement)\n","import P5 from 'p5'\nimport P5ble from 'p5ble'\nlet that\nclass Ble {\n  constructor () {\n    console.log('looking for: A22A0001-AD0B-4DF2-A4E2-1745CBB4dCEE')\n    this.serviceUuid = 'A22A0001-AD0B-4DF2-A4E2-1745CBB4dCEE'\n    this.myBLE = new P5ble()\n    this.isConnected = false\n    this.sensorValues = []\n    this.sensorValues[0] = 0\n    this.sensorValues[1] = 0\n    this.sensorValues[2] = 0\n    this.sensorValues[3] = 0\n    this.sensorValues[4] = 0\n    this.sensorValues[5] = 0\n    this.sensorValues[6] = 0\n    this.sensorValues[7] = 0\n    that = this // set a reference to the instance this\n  }\n\n  connectAndStartNotify () {\n    // Connect to a device by passing the service UUID\n    this.myBLE.connect(this.serviceUuid, this.gotCharacteristics)\n  }\n  gotCharacteristics (error, characteristics) {\n    // A function that will be called once got characteristics\n    if (error) {\n      console.log('error: ', error)\n    } else {\n      console.log(characteristics[0])\n      // Check if myBLE is connected\n      console.log('check connection.')\n      that.isConnected = that.myBLE.isConnected()\n\n      // Add a event handler when the device is disconnected\n      that.myBLE.onDisconnected(that.onDisconnected)\n\n      for (let i = 0; i < characteristics.length; i++) {\n        if (i === 0) {\n          const sensorCharacteristic = characteristics[i]\n          // Set datatype to 'custom', p5.ble.js won't parse the data, will return data as it is.\n\n          that.myBLE.startNotifications(sensorCharacteristic, that.handleSensor, 'custom')\n          console.log('characteristics: 1')\n        } else if (i === 1) {\n          console.log('characteristics: 2')\n        } else if (i === 2) {\n          console.log('characteristics: 3')\n        } else {\n          console.log(\"characteristic doesn't match.\")\n        }\n      }\n    }\n  }\n\n  onDisconnected () {\n    console.log('Device was disconnected.')\n    this.isConnected = false\n  }\n\n  handleSensor (data) {\n    let factor = 0.8\n    // console.log(data.toString())\n    // weighted moving average of values\n    that.sensorValues[0] = Math.floor(that.sensorValues[0] * factor)\n    that.sensorValues[1] = Math.floor(that.sensorValues[1] * factor)\n    that.sensorValues[2] = Math.floor(that.sensorValues[2] * factor)\n    that.sensorValues[3] = Math.floor(that.sensorValues[3] * factor)\n    that.sensorValues[4] = Math.floor(that.sensorValues[4] * factor)\n    that.sensorValues[5] = Math.floor(that.sensorValues[5] * factor)\n    that.sensorValues[6] = Math.floor(that.sensorValues[6] * factor)\n    that.sensorValues[7] = Math.floor(that.sensorValues[7] * factor)\n    that.sensorValues[0] += Math.floor(data.getUint16(0, true) * (1.0 - factor))\n    that.sensorValues[1] += Math.floor(data.getUint16(2, true) * (1.0 - factor))\n    that.sensorValues[2] += Math.floor(data.getUint16(4, true) * (1.0 - factor))\n    that.sensorValues[3] += Math.floor(data.getUint16(6, true) * (1.0 - factor))\n    that.sensorValues[4] += Math.floor(data.getUint16(8, true) * (1.0 - factor))\n    that.sensorValues[5] += Math.floor(data.getUint16(10, true) * (1.0 - factor))\n    that.sensorValues[6] += Math.floor(data.getUint16(11, true) * (1.0 - factor))\n    that.sensorValues[7] += Math.floor(data.getUint16(12, true) * (1.0 - factor))\n  }\n}\nexport default Ble\n"],"sourceRoot":""}