{"version":3,"sources":["webpack:///./src/js/Spring.js","webpack:///./src/app.js","webpack:///./src/js/Ble.js","webpack:///./src/js/Wave.js"],"names":["Spring","_classCallCheck3","default","this","Velocity","TargetHeight","CurentHeight","km","d","_x","_y","x","Acceleration","__webpack_require__","containerElement","document","getElementById","P5","p","myFont","myBLE","wave","preload","loadFont","setup","createCanvas","windowWidth","windowHeight","Ble","textFont","textSize","width","fill","noStroke","textAlign","CENTER","window","chrome","webstore","runtime","alert","Wave","draw","clear","push","isConnected","spacing","i","sensorValues","length","Splash","floor","update","fps","frameRate","translate","height","text","toFixed","touchStarted","connectAndStartNotify","mouseX","mouseY","windowResized","resizeCanvas","that","serviceUuid","P5ble","connect","gotCharacteristics","error","characteristics","console","log","onDisconnected","sensorCharacteristic","startNotifications","handleSensor","data","Math","getUint16","scaleFactor","springxcount","springycount","deltas","Array","springs","nodeWidth","maxSplash","Spread","j","y","left","right","up","down","neighbors","num","min","max","MIN","MAX","parsed","parseInt","img","createImage","loadPixels","pixelDensity","loc","pixels","minMax","updatePixels","resize","positionX","positionY","image"],"mappings":"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","file":"static/js/0.7a1c9803ade6d6452602.js","sourcesContent":["class Spring {\n  constructor () {\n    this.Velocity = 0\n    this.TargetHeight = 0\n    this.CurentHeight = 0\n    // float k = 1;\n    // float m = 100;\n    this.km = 0.012 // spring constant (k) divided by mass (m)\n    this.d = 0.073 // dampening factor\n    this._x = 0\n    this._y = 0\n    this.x = 0\n    this.Acceleration = 0\n  }\n  update () {\n    // Calculions based on the work of Michael Hoffman\n    this.x = this.CurentHeight - this.TargetHeight\n    this.Acceleration = -this.km * this.x - this.d * this.Velocity\n    this.CurentHeight += this.Velocity\n    this.Velocity += this.Acceleration\n  }\n}\nexport default Spring\n","import './css/style.css'\nimport P5 from 'p5'\nimport Ble from './js/Ble'\nimport Wave from './js/Wave'\n// todo: webpack is building with html file paths defaulting to root. This should be local to make it easer to host demos with github pages\nconst containerElement = document.getElementById('p5-container')\n\nconst sketch = (p) => {\n  let myFont\n  let myBLE\n  let wave\n  const serviceUuid = 'ff9c1e42-7b32-11ea-bc55-0242ac130003'\n  let sensorCharacteristic\n  let isConnected = false\n  p.preload = function () {\n    myFont = p.loadFont('static/fonts/inconsolata.otf')\n  }\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight)\n    myBLE = new Ble()\n    p.textFont(myFont)\n    p.textSize(p.width / 60)\n    p.fill(255)\n    p.noStroke()\n    p.textAlign(p.CENTER, p.CENTER)\n    let isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime)\n    if (!isChrome) {\n      window.alert('BLE may not work in your browser. Use Chrome or check for a list of compatible browsers here: https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API')\n    }\n    wave = new Wave(p.windowWidth, p.windowHeight)\n  }\n\n  p.draw = function () {\n    p.clear()\n    p.fill(255)\n    p.push()\n    if (myBLE.isConnected) {\n      drawGame(p)\n      let fps = p.frameRate()\n      p.fill(255)\n      p.translate(30, p.height - 10)\n      p.textSize(10)\n      p.text('FPS: ' + fps.toFixed(2), 0, 0)\n    } else {\n      p.translate(p.windowWidth / 2, p.windowHeight / 2)\n      p.text('No BLE Connection, click anywhere to pair BLE device', 0, 0)\n    }\n  }\n\n  p.touchStarted = function () {\n    myBLE.connectAndStartNotify()\n    wave.Splash(p.floor(p.mouseX), p.floor(p.mouseY), 1000)\n  }\n\n  function drawGame (p) {\n    let spacing = p.windowWidth / 5\n    for (let i = 0; i < myBLE.sensorValues.length; i++) {\n      if (myBLE.sensorValues[i] >= 1000) {\n        wave.Splash(spacing + p.floor(spacing * i), p.windowHeight / 2, myBLE.sensorValues[i])\n      }\n    }\n    wave.update(p)\n  }\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight)\n  }\n}\n\nlet PFIVE = new P5(sketch, containerElement)\n","import P5 from 'p5'\nimport P5ble from 'p5ble'\nlet that\nclass Ble {\n  constructor () {\n    this.serviceUuid = 'ff9c1e42-7b32-11ea-bc55-0242ac130003'\n    this.myBLE = new P5ble()\n    this.isConnected = false\n    this.sensorValues = []\n    this.sensorValues[0] = 0\n    this.sensorValues[1] = 0\n    this.sensorValues[2] = 0\n    this.sensorValues[3] = 0\n    that = this // set a reference to the instance this\n  }\n  connectAndStartNotify () {\n    // Connect to a device by passing the service UUID\n    this.myBLE.connect(this.serviceUuid, this.gotCharacteristics)\n  }\n  gotCharacteristics (error, characteristics) {\n    // A function that will be called once got characteristics\n    if (error) {\n      console.log('error: ', error)\n    } else {\n      console.log(characteristics[0])\n      // Check if myBLE is connected\n      console.log('check connection.')\n      that.isConnected = that.myBLE.isConnected()\n\n      // Add a event handler when the device is disconnected\n      that.myBLE.onDisconnected(that.onDisconnected)\n\n      for (let i = 0; i < characteristics.length; i++) {\n        if (i === 0) {\n          const sensorCharacteristic = characteristics[i]\n          // Set datatype to 'custom', p5.ble.js won't parse the data, will return data as it is.\n          that.myBLE.startNotifications(sensorCharacteristic, that.handleSensor, 'custom')\n          console.log('characteristics: 1')\n        } else if (i === 1) {\n          console.log('characteristics: 2')\n        } else if (i === 2) {\n          console.log('characteristics: 3')\n        } else {\n          console.log(\"characteristic doesn't match.\")\n        }\n      }\n    }\n  }\n\n  onDisconnected () {\n    console.log('Device was disconnected.')\n    this.isConnected = false\n  }\n\n  handleSensor (data) {\n    let factor = 0.8\n    // weighted moving average of values\n    that.sensorValues[1] = Math.floor(that.sensorValues[1] * factor)\n    that.sensorValues[0] = Math.floor(that.sensorValues[0] * factor)\n    that.sensorValues[2] = Math.floor(that.sensorValues[2] * factor)\n    that.sensorValues[3] = Math.floor(that.sensorValues[3] * factor)\n    that.sensorValues[0] += Math.floor(data.getUint16(0, true) * (1.0 - factor))\n    that.sensorValues[1] += Math.floor(data.getUint16(2, true) * (1.0 - factor))\n    that.sensorValues[2] += Math.floor(data.getUint16(4, true) * (1.0 - factor))\n    that.sensorValues[3] += Math.floor(data.getUint16(6, true) * (1.0 - factor))\n  }\n}\nexport default Ble\n","import P5 from 'p5'\nimport Spring from './Spring.js'\nclass Wave {\n  constructor (width, height) {\n    this.scaleFactor = 7\n    this.springxcount = Math.floor(width / this.scaleFactor)\n    this.springycount = Math.floor(height / this.scaleFactor)\n    this.deltas = new Array(this.springxcount)\n    this.springs = new Array(this.springxcount)\n    this.nodeWidth = 3\n    this.maxSplash = 1000\n    this.Spread = 0.4\n    // controls how fast the waves spread. It can take values between 0 and 0.5, with larger values making the waves spread out faster.\n\n    for (let i = 0; i < this.springxcount; i++) {\n      this.deltas[i] = new Array(this.springycount)\n      this.springs[i] = new Array(this.springycount)\n      for (let j = 0; j < this.springycount; j++) {\n        this.deltas[i][j] = 0\n        this.springs[i][j] = new Spring()\n        this.springs[i][j]._x = this.nodeWidth * i\n        this.springs[i][j]._y = this.nodeWidth * j\n        this.springs[i][j].TargetHeight = 0\n      }\n    }\n  }\n  Splash (x, y, Velocity) {\n    x = Math.floor(x / this.scaleFactor)\n    y = Math.floor(y / this.scaleFactor)\n    this.springs[x][y].Velocity = Velocity\n  }\n\n  update (p) {\n    for (let i = 0; i < this.springxcount; i++) {\n      for (let j = 0; j < this.springycount; j++) {\n        let left = (i - 1 + this.springxcount) % this.springxcount\n        let right = (i + 1) % this.springxcount\n        let up = (j - 1 + this.springycount) % this.springycount\n        let down = (j + 1) % this.springycount\n        let neighbors = this.springs[left][j].CurentHeight * 0.25 + this.springs[right][j].CurentHeight * 0.25 + this.springs[i][up].CurentHeight * 0.25 + this.springs[i][down].CurentHeight * 0.25\n        this.deltas[i][j] = this.Spread * (neighbors - this.springs[i][j].CurentHeight)\n      }\n    }\n\n    for (let i = 0; i < this.springxcount; i++) {\n      for (let j = 0; j < this.springycount; j++) {\n        this.springs[i][j].Velocity += this.deltas[i][j]\n        this.springs[i][j].CurentHeight += this.deltas[i][j]\n        this.springs[i][j].update()\n      }\n    }\n    this.draw(p)\n  }\n\n  minMax (num, min, max) {\n    const MIN = min || 1\n    const MAX = max || 20\n    const parsed = parseInt(num)\n    return Math.min(Math.max(parsed, MIN), MAX)\n  }\n\n  draw (p) {\n    let img = p.createImage(this.springxcount, this.springycount)\n    img.loadPixels()\n    let d = p.pixelDensity()\n    for (let i = 0; i < this.springxcount; i++) {\n      for (let j = 0; j < this.springycount; j++) {\n        if (this.springs[i][j].CurentHeight >= 15) {\n          let loc = (i + (j * img.width)) * 4\n          img.pixels[loc] = 254\n          img.pixels[loc + 1] = 254\n          img.pixels[loc + 2] = 254\n          img.pixels[loc + 3] = this.minMax(this.springs[i][j].CurentHeight * 5, 0, 254)\n        }\n      }\n    }\n    img.updatePixels()\n    img.resize(p.windowWidth / 2, p.windowHeight / 2)\n    let positionX = p.windowWidth / 2\n    positionX -= p.windowWidth / 4\n    let positionY = p.windowHeight / 2\n    positionY -= p.windowHeight / 4\n    p.image(img, positionX, positionY)\n  }\n}\nexport default Wave\n"],"sourceRoot":""}